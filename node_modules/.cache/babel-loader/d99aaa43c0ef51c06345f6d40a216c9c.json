{"ast":null,"code":"var _jsxFileName = \"/Users/janghan/Desktop/Github_files/janghana.github.io/src/components/Projects.js\";\n// Projects.js\n\nimport React from 'react';\nimport '../App.css';\nimport LeftSideProfile from './LeftSideProfile';\nimport defPng from './def.png'; // 실제 png 경로에 맞게 수정\n\nfunction Projects() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LeftSideProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      marginTop: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Projects\"), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      borderColor: '#e0e0e0',\n      opacity: '0.15',\n      width: '20%',\n      marginLeft: '0',\n      marginBottom: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      paddingRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Kaggle Competition - Leaf Classification\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Participated in the \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 35\n    }\n  }, \"Leaf Classification\"), \" Kaggle competition. In this project, I explored feature extraction using morphological characteristics and combined it with machine learning models (e.g., Random Forest, SVM). Focus was on identifying plants by analyzing leaf images.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Preprocessing: contour detection, shape analysis\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"Models: Random Forest, SVM\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Evaluation: multi-class accuracy, cross-validation\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Outcome:\"), \" Achieved a top X% rank on Kaggle and improved understanding of morphological features.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defPng,\n    alt: \"Kaggle Leaf Classification\",\n    style: {\n      width: '150px',\n      height: '150px',\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      borderColor: '#e0e0e0',\n      opacity: '0.15',\n      width: '10%',\n      marginLeft: '0',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      paddingRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Medical Imaging - Deep Learning Classifier\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Developed a \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 27\n    }\n  }, \"Deep Learning\"), \" model for classifying medical images (CT/MRI scans) with a focus on early detection of diseases. Collaborated with medical professionals to label datasets and experimented with \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 77\n    }\n  }, \"Convolutional Neural Networks (CNN)\"), \".\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, \"Framework: PyTorch + Python\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Data: Publicly available CT/MRI datasets\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, \"Highlights: Transfer learning (ResNet, VGG), data augmentation\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Outcome:\"), \" Improved sensitivity and specificity in classification; potential for further clinical validation.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defPng,\n    alt: \"Medical Imaging\",\n    style: {\n      width: '150px',\n      height: '150px',\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      borderColor: '#e0e0e0',\n      opacity: '0.15',\n      width: '10%',\n      marginLeft: '0',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      paddingRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Robotics - Sensor Fusion & Path Planning\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Implemented sensor fusion algorithms combining LiDAR and camera data for obstacle detection and path planning in a small-scale autonomous robot. Used \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 20\n    }\n  }, \"ROS (Robot Operating System)\"), \" to integrate multiple sensor streams.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Tech Stack: ROS, C++, Python\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Algorithms: Extended Kalman Filter for fusion, A* for path planning\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Outcome:\"), \" Demonstrated robust obstacle avoidance with a real-time decision framework.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defPng,\n    alt: \"Robotics Sensor Fusion\",\n    style: {\n      width: '150px',\n      height: '150px',\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      borderColor: '#e0e0e0',\n      opacity: '0.15',\n      width: '10%',\n      marginLeft: '0',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      paddingRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, \"High-Performance Computing (HPC) - GPU Acceleration\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Explored GPU acceleration for large-scale \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 57\n    }\n  }, \"matrix operations\"), \"and machine learning workloads. Experimented with \", /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 65\n    }\n  }, \"CUDA\"), \" kernels to optimize compute-intensive tasks.\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Framework: CUDA, cuBLAS\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Benchmarks: Matrix multiplication, convolution ops\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Performance Gains: Achieved up to 10x speedup vs. CPU baseline\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, \"Outcome:\"), \" Learned parallel programming strategies and memory optimization on GPU.\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defPng,\n    alt: \"HPC GPU Acceleration\",\n    style: {\n      width: '150px',\n      height: '150px',\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    style: {\n      borderColor: '#e0e0e0',\n      opacity: '0.15',\n      width: '10%',\n      marginLeft: '0',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      marginBottom: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      paddingRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Additional / Ongoing\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"Bioinformatics pipeline:\"), \"Building a pipeline for analyzing gene expression data with Python + R.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"Open Source Contributions:\"), \"Minor patches to Mozilla Firefox and VLC for bug fixes.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Personal Website:\"), \"Maintaining a static site generator for personal blog & portfolio (React + GitHub Pages).\")), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      fontStyle: 'italic'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, \"For more details or collaborations, please feel free to reach out!\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: defPng,\n    alt: \"Additional Projects\",\n    style: {\n      width: '150px',\n      height: '150px',\n      objectFit: 'cover'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }));\n}\nexport default Projects;","map":{"version":3,"names":["React","LeftSideProfile","defPng","Projects","createElement","style","display","width","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","flex","marginTop","borderColor","opacity","marginLeft","marginBottom","paddingRight","fontStyle","justifyContent","alignItems","src","alt","height","objectFit"],"sources":["/Users/janghan/Desktop/Github_files/janghana.github.io/src/components/Projects.js"],"sourcesContent":["// Projects.js\n\nimport React from 'react';\nimport '../App.css';\nimport LeftSideProfile from './LeftSideProfile';\nimport defPng from './def.png';  // 실제 png 경로에 맞게 수정\n\nfunction Projects() {\n  return (\n    <div style={{ display: 'flex', width: '100%' }}>\n      \n      {/* 왼쪽 프로필 (Home.js와 동일) */}\n      <LeftSideProfile />\n\n      {/* 가운데 영역 (flex:2) */}\n      <div style={{ flex: '2' }}>\n        <h2 style={{ marginTop: '1rem' }}>Projects</h2>\n        <hr \n          style={{ \n            borderColor: '#e0e0e0', \n            opacity: '0.15', \n            width: '20%',\n            marginLeft: '0',\n            marginBottom: '1rem'\n          }}\n        />\n\n        {/* ================================\n            1) Kaggle Competition\n        ================================ */}\n        <div style={{ display: 'flex', marginBottom: '2rem' }}>\n          {/* 왼쪽 텍스트 */}\n          <div style={{ flex: 1, paddingRight: '1rem' }}>\n            <h3>Kaggle Competition - Leaf Classification</h3>\n            <p>\n              Participated in the <strong>Leaf Classification</strong> Kaggle competition. \n              In this project, I explored feature extraction using morphological characteristics \n              and combined it with machine learning models (e.g., Random Forest, SVM). \n              Focus was on identifying plants by analyzing leaf images. \n            </p>\n            <ul>\n              <li>Preprocessing: contour detection, shape analysis</li>\n              <li>Models: Random Forest, SVM</li>\n              <li>Evaluation: multi-class accuracy, cross-validation</li>\n            </ul>\n            <p style={{ fontStyle: 'italic' }}>\n              <strong>Outcome:</strong> Achieved a top X% rank on Kaggle and improved understanding of morphological features.\n            </p>\n          </div>\n\n          {/* 오른쪽: PNG */}\n          <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <img \n              src={defPng} \n              alt=\"Kaggle Leaf Classification\"\n              style={{ width: '150px', height: '150px', objectFit: 'cover' }} \n            />\n          </div>\n        </div>\n\n        <hr \n          style={{ \n            borderColor: '#e0e0e0', \n            opacity: '0.15', \n            width: '10%',\n            marginLeft: '0',\n            marginBottom: '2rem'\n          }}\n        />\n\n        {/* ================================\n            2) Medical Imaging Analysis\n        ================================ */}\n        <div style={{ display: 'flex', marginBottom: '2rem' }}>\n          <div style={{ flex: 1, paddingRight: '1rem' }}>\n            <h3>Medical Imaging - Deep Learning Classifier</h3>\n            <p>\n              Developed a <strong>Deep Learning</strong> model for classifying medical images \n              (CT/MRI scans) with a focus on early detection of diseases. Collaborated with \n              medical professionals to label datasets and experimented with <em>Convolutional Neural Networks (CNN)</em>.\n            </p>\n            <ul>\n              <li>Framework: PyTorch + Python</li>\n              <li>Data: Publicly available CT/MRI datasets</li>\n              <li>Highlights: Transfer learning (ResNet, VGG), data augmentation</li>\n            </ul>\n            <p style={{ fontStyle: 'italic' }}>\n              <strong>Outcome:</strong> Improved sensitivity and specificity in classification; \n              potential for further clinical validation.\n            </p>\n          </div>\n          <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <img \n              src={defPng} \n              alt=\"Medical Imaging\"\n              style={{ width: '150px', height: '150px', objectFit: 'cover' }} \n            />\n          </div>\n        </div>\n\n        <hr \n          style={{ \n            borderColor: '#e0e0e0', \n            opacity: '0.15', \n            width: '10%',\n            marginLeft: '0',\n            marginBottom: '2rem'\n          }}\n        />\n\n        {/* ================================\n            3) Robotics & Sensor Fusion\n        ================================ */}\n        <div style={{ display: 'flex', marginBottom: '2rem' }}>\n          <div style={{ flex: 1, paddingRight: '1rem' }}>\n            <h3>Robotics - Sensor Fusion & Path Planning</h3>\n            <p>\n              Implemented sensor fusion algorithms combining LiDAR and camera data for \n              obstacle detection and path planning in a small-scale autonomous robot.  \n              Used <em>ROS (Robot Operating System)</em> to integrate multiple sensor streams.\n            </p>\n            <ul>\n              <li>Tech Stack: ROS, C++, Python</li>\n              <li>Algorithms: Extended Kalman Filter for fusion, A* for path planning</li>\n            </ul>\n            <p style={{ fontStyle: 'italic' }}>\n              <strong>Outcome:</strong> Demonstrated robust obstacle avoidance with a real-time decision framework.\n            </p>\n          </div>\n          <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <img \n              src={defPng} \n              alt=\"Robotics Sensor Fusion\"\n              style={{ width: '150px', height: '150px', objectFit: 'cover' }} \n            />\n          </div>\n        </div>\n\n        <hr \n          style={{ \n            borderColor: '#e0e0e0', \n            opacity: '0.15', \n            width: '10%',\n            marginLeft: '0',\n            marginBottom: '2rem'\n          }}\n        />\n\n        {/* ================================\n            4) GPU-Accelerated HPC Project\n        ================================ */}\n        <div style={{ display: 'flex', marginBottom: '2rem' }}>\n          <div style={{ flex: 1, paddingRight: '1rem' }}>\n            <h3>High-Performance Computing (HPC) - GPU Acceleration</h3>\n            <p>\n              Explored GPU acceleration for large-scale <strong>matrix operations</strong> \n              and machine learning workloads. Experimented with <em>CUDA</em> kernels \n              to optimize compute-intensive tasks.\n            </p>\n            <ul>\n              <li>Framework: CUDA, cuBLAS</li>\n              <li>Benchmarks: Matrix multiplication, convolution ops</li>\n              <li>Performance Gains: Achieved up to 10x speedup vs. CPU baseline</li>\n            </ul>\n            <p style={{ fontStyle: 'italic' }}>\n              <strong>Outcome:</strong> Learned parallel programming strategies \n              and memory optimization on GPU.\n            </p>\n          </div>\n          <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <img \n              src={defPng} \n              alt=\"HPC GPU Acceleration\"\n              style={{ width: '150px', height: '150px', objectFit: 'cover' }} \n            />\n          </div>\n        </div>\n\n        <hr \n          style={{ \n            borderColor: '#e0e0e0', \n            opacity: '0.15', \n            width: '10%',\n            marginLeft: '0',\n            marginBottom: '2rem'\n          }}\n        />\n\n        {/* ================================\n            5) Additional / Ongoing\n        ================================ */}\n        <div style={{ display: 'flex', marginBottom: '2rem' }}>\n          <div style={{ flex: 1, paddingRight: '1rem' }}>\n            <h3>Additional / Ongoing</h3>\n            <ul>\n              <li>\n                <strong>Bioinformatics pipeline:</strong> \n                Building a pipeline for analyzing gene expression data with Python + R.\n              </li>\n              <li>\n                <strong>Open Source Contributions:</strong> \n                Minor patches to Mozilla Firefox and VLC for bug fixes.\n              </li>\n              <li>\n                <strong>Personal Website:</strong> \n                Maintaining a static site generator for personal blog & portfolio (React + GitHub Pages).\n              </li>\n            </ul>\n            <p style={{ fontStyle: 'italic' }}>\n              For more details or collaborations, please feel free to reach out!\n            </p>\n          </div>\n          <div style={{ flex: 1, display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <img \n              src={defPng} \n              alt=\"Additional Projects\"\n              style={{ width: '150px', height: '150px', objectFit: 'cover' }} \n            />\n          </div>\n        </div>\n\n      </div>\n\n      {/* 오른쪽 여백 (Home.js와 동일) */}\n      <div style={{ flex: '1' }} />\n    </div>\n  );\n}\n\nexport default Projects;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,MAAM,MAAM,WAAW,CAAC,CAAE;;AAEjC,SAASC,QAAQA,CAAA,EAAG;EAClB,oBACEH,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAG7Cb,KAAA,CAAAI,aAAA,CAACH,eAAe;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAGnBb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE;IAAI,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBb,KAAA,CAAAI,aAAA;IAAIC,KAAK,EAAE;MAAEU,SAAS,EAAE;IAAO,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,UAAY,CAAC,eAC/Cb,KAAA,CAAAI,aAAA;IACEC,KAAK,EAAE;MACLW,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,MAAM;MACfV,KAAK,EAAE,KAAK;MACZW,UAAU,EAAE,GAAG;MACfC,YAAY,EAAE;IAChB,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eAKFb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEa,YAAY,EAAE;IAAO,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEpDb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAEM,YAAY,EAAE;IAAO,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5Cb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,0CAA4C,CAAC,eACjDb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,sBACmB,eAAAb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,qBAA2B,CAAC,8OAIvD,CAAC,eACJb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,kDAAoD,CAAC,eACzDb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4BAA8B,CAAC,eACnCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oDAAsD,CACxD,CAAC,eACLb,KAAA,CAAAI,aAAA;IAAGC,KAAK,EAAE;MAAEgB,SAAS,EAAE;IAAS,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CAAC,2FACxB,CACA,CAAC,eAGNb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAER,OAAO,EAAE,MAAM;MAAEgB,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvFb,KAAA,CAAAI,aAAA;IACEoB,GAAG,EAAEtB,MAAO;IACZuB,GAAG,EAAC,4BAA4B;IAChCpB,KAAK,EAAE;MAAEE,KAAK,EAAE,OAAO;MAAEmB,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChE,CACE,CACF,CAAC,eAENb,KAAA,CAAAI,aAAA;IACEC,KAAK,EAAE;MACLW,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,MAAM;MACfV,KAAK,EAAE,KAAK;MACZW,UAAU,EAAE,GAAG;MACfC,YAAY,EAAE;IAChB,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eAKFb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEa,YAAY,EAAE;IAAO,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAEM,YAAY,EAAE;IAAO,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5Cb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4CAA8C,CAAC,eACnDb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,cACW,eAAAb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,eAAqB,CAAC,sLAEoB,eAAAb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,qCAAuC,CAAC,KACzG,CAAC,eACJb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,6BAA+B,CAAC,eACpCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,0CAA4C,CAAC,eACjDb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gEAAkE,CACpE,CAAC,eACLb,KAAA,CAAAI,aAAA;IAAGC,KAAK,EAAE;MAAEgB,SAAS,EAAE;IAAS,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CAAC,uGAExB,CACA,CAAC,eACNb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAER,OAAO,EAAE,MAAM;MAAEgB,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvFb,KAAA,CAAAI,aAAA;IACEoB,GAAG,EAAEtB,MAAO;IACZuB,GAAG,EAAC,iBAAiB;IACrBpB,KAAK,EAAE;MAAEE,KAAK,EAAE,OAAO;MAAEmB,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChE,CACE,CACF,CAAC,eAENb,KAAA,CAAAI,aAAA;IACEC,KAAK,EAAE;MACLW,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,MAAM;MACfV,KAAK,EAAE,KAAK;MACZW,UAAU,EAAE,GAAG;MACfC,YAAY,EAAE;IAChB,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eAKFb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEa,YAAY,EAAE;IAAO,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAEM,YAAY,EAAE;IAAO,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5Cb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,0CAA4C,CAAC,eACjDb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,wJAGI,eAAAb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,8BAAgC,CAAC,0CACzC,CAAC,eACJb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,8BAAgC,CAAC,eACrCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,qEAAuE,CACzE,CAAC,eACLb,KAAA,CAAAI,aAAA;IAAGC,KAAK,EAAE;MAAEgB,SAAS,EAAE;IAAS,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CAAC,gFACxB,CACA,CAAC,eACNb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAER,OAAO,EAAE,MAAM;MAAEgB,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvFb,KAAA,CAAAI,aAAA;IACEoB,GAAG,EAAEtB,MAAO;IACZuB,GAAG,EAAC,wBAAwB;IAC5BpB,KAAK,EAAE;MAAEE,KAAK,EAAE,OAAO;MAAEmB,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChE,CACE,CACF,CAAC,eAENb,KAAA,CAAAI,aAAA;IACEC,KAAK,EAAE;MACLW,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,MAAM;MACfV,KAAK,EAAE,KAAK;MACZW,UAAU,EAAE,GAAG;MACfC,YAAY,EAAE;IAChB,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eAKFb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEa,YAAY,EAAE;IAAO,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAEM,YAAY,EAAE;IAAO,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5Cb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,qDAAuD,CAAC,eAC5Db,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,4CACyC,eAAAb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,mBAAyB,CAAC,sDAC1B,eAAAb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,MAAQ,CAAC,iDAE9D,CAAC,eACJb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,yBAA2B,CAAC,eAChCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,oDAAsD,CAAC,eAC3Db,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gEAAkE,CACpE,CAAC,eACLb,KAAA,CAAAI,aAAA;IAAGC,KAAK,EAAE;MAAEgB,SAAS,EAAE;IAAS,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChCb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,UAAgB,CAAC,4EAExB,CACA,CAAC,eACNb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAER,OAAO,EAAE,MAAM;MAAEgB,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvFb,KAAA,CAAAI,aAAA;IACEoB,GAAG,EAAEtB,MAAO;IACZuB,GAAG,EAAC,sBAAsB;IAC1BpB,KAAK,EAAE;MAAEE,KAAK,EAAE,OAAO;MAAEmB,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChE,CACE,CACF,CAAC,eAENb,KAAA,CAAAI,aAAA;IACEC,KAAK,EAAE;MACLW,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE,MAAM;MACfV,KAAK,EAAE,KAAK;MACZW,UAAU,EAAE,GAAG;MACfC,YAAY,EAAE;IAChB,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACH,CAAC,eAKFb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEa,YAAY,EAAE;IAAO,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAEM,YAAY,EAAE;IAAO,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5Cb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,sBAAwB,CAAC,eAC7Bb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,0BAAgC,CAAC,2EAEvC,CAAC,eACLb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,4BAAkC,CAAC,2DAEzC,CAAC,eACLb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACEb,KAAA,CAAAI,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQ,mBAAyB,CAAC,6FAEhC,CACF,CAAC,eACLb,KAAA,CAAAI,aAAA;IAAGC,KAAK,EAAE;MAAEgB,SAAS,EAAE;IAAS,CAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,oEAEhC,CACA,CAAC,eACNb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE,CAAC;MAAER,OAAO,EAAE,MAAM;MAAEgB,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvFb,KAAA,CAAAI,aAAA;IACEoB,GAAG,EAAEtB,MAAO;IACZuB,GAAG,EAAC,qBAAqB;IACzBpB,KAAK,EAAE;MAAEE,KAAK,EAAE,OAAO;MAAEmB,MAAM,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAQ,CAAE;IAAAnB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAChE,CACE,CACF,CAEF,CAAC,eAGNb,KAAA,CAAAI,aAAA;IAAKC,KAAK,EAAE;MAAES,IAAI,EAAE;IAAI,CAAE;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACzB,CAAC;AAEV;AAEA,eAAeV,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}