{"ast":null,"code":"'use strict';\n\nvar $TypeError = require('es-errors/type');\nvar inspect = require('object-inspect');\nvar getSideChannelList = require('side-channel-list');\nvar getSideChannelMap = require('side-channel-map');\nvar getSideChannelWeakMap = require('side-channel-weakmap');\nvar makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n  /** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n  /** @type {Channel | undefined} */var $channelData;\n\n  /** @type {Channel} */\n  var channel = {\n    assert: function (key) {\n      if (!channel.has(key)) {\n        throw new $TypeError('Side channel does not contain ' + inspect(key));\n      }\n    },\n    'delete': function (key) {\n      return !!$channelData && $channelData['delete'](key);\n    },\n    get: function (key) {\n      return $channelData && $channelData.get(key);\n    },\n    has: function (key) {\n      return !!$channelData && $channelData.has(key);\n    },\n    set: function (key, value) {\n      if (!$channelData) {\n        $channelData = makeChannel();\n      }\n      $channelData.set(key, value);\n    }\n  };\n  // @ts-expect-error TODO: figure out why this is erroring\n  return channel;\n};","map":null,"metadata":{},"sourceType":"script"}